{"version":3,"file":"fulfillment-detail.js","sourceRoot":"","sources":["../../../src/assemble/assemble/fulfillment-detail.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAEnE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AAErE,OAAO,iCAAiC,CAAC;AAGlC,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,UAAU;IAY/C,KAAK,CAAC,YAAY;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,UAAU,CAAE,CAAC;QAC9F,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClE,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,iBAAiB;YAC1B,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,YAAY,GAAG,MAAM,CAAE,MAAM,CAAC,KAAa,CAAC,OAAO,CAAC,KAAK,CAAgB,CAAC;SAChF;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO,IAAI,CAAA;;aAEJ,CAAC;SACT;QACD,OAAO,IAAI,CAAA;;;;;;4CAM6B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAK;;;;;4CAK3C,IAAI,CAAC,YAAY,CAAC,UAAW;;;KAGrE,CAAC;IACJ,CAAC;CACF,CAAA;AA/CC;IADC,QAAQ,EAAE;qDACa;AAGxB;IADC,KAAK,EAAE;uDAC8B;AAGtC;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;uDACtB;AAE5B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;kDAClB;AAVhB,iBAAiB;IAD7B,aAAa,CAAC,oBAAoB,CAAC;GACvB,iBAAiB,CAiD7B;SAjDY,iBAAiB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { state, customElement, property } from 'lit/decorators.js';\nimport { InstalledCell, AppWebsocket, Record, ActionHash, InstalledAppInfo } from '@holochain/client';\nimport { contextProvided } from '@lit-labs/context';\nimport { decode } from '@msgpack/msgpack';\nimport { appInfoContext, appWebsocketContext } from '../../contexts';\nimport { Fulfillment } from './fulfillment';\nimport '@material/mwc-circular-progress';\n\n@customElement('fulfillment-detail')\nexport class FulfillmentDetail extends LitElement {\n  @property()\n  actionHash!: ActionHash;\n\n  @state()\n  _fulfillment: Fulfillment | undefined;\n\n  @contextProvided({ context: appWebsocketContext })\n  appWebsocket!: AppWebsocket;\n  @contextProvided({ context: appInfoContext })\n  appInfo!: InstalledAppInfo;\n\n  async firstUpdated() {\n    const cellData = this.appInfo.cell_data.find((c: InstalledCell) => c.role_id === 'assemble')!;\n    const record: Record | undefined = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'assemble',\n      fn_name: 'get_fulfillment',\n      payload: this.actionHash,\n      provenance: cellData.cell_id[1]\n    });\n    if (record) {\n      this._fulfillment = decode((record.entry as any).Present.entry) as Fulfillment;\n    }\n  }\n\n  render() {\n    if (!this._fulfillment) {\n      return html`<div style=\"display: flex; flex: 1; align-items: center; justify-content: center\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n    }\n    return html`\n      <div style=\"display: flex; flex-direction: column\">\n        <span style=\"font-size: 18px\">Fulfillment</span>\n\t\t  <!-- TODO: implement the rendering of commitment_hash -->\n\t\t  <div style=\"display: flex; flex-direction: row\">\n\t\t    <span><strong></strong></span>\n\t\t    <span style=\"white-space: pre-line\">${this._fulfillment.fullfilled ? 'Yes' : 'No' }</span>\n\t\t  </div>\n\t\t  <!-- TODO: implement the rendering of promise_hash -->\n\t\t  <div style=\"display: flex; flex-direction: column\">\n\t\t    <span><strong></strong></span>\n\t\t    <span style=\"white-space: pre-line\">${ this._fulfillment.reflection }</span>\n\t\t  </div>\n      </div>\n    `;\n  }\n}\n"]}