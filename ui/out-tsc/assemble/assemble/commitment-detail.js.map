{"version":3,"file":"commitment-detail.js","sourceRoot":"","sources":["../../../src/assemble/assemble/commitment-detail.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAEnE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AAErE,OAAO,iCAAiC,CAAC;AAGlC,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAY9C,KAAK,CAAC,YAAY;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,UAAU,CAAE,CAAC;QAC9F,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClE,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,gBAAgB;YACzB,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,WAAW,GAAG,MAAM,CAAE,MAAM,CAAC,KAAa,CAAC,OAAO,CAAC,KAAK,CAAe,CAAC;SAC9E;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO,IAAI,CAAA;;aAEJ,CAAC;SACT;QACD,OAAO,IAAI,CAAA;;;;;KAKV,CAAC;IACJ,CAAC;CACF,CAAA;AAtCC;IADC,QAAQ,EAAE;oDACa;AAGxB;IADC,KAAK,EAAE;qDAC4B;AAGpC;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;sDACtB;AAE5B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;iDAClB;AAVhB,gBAAgB;IAD5B,aAAa,CAAC,mBAAmB,CAAC;GACtB,gBAAgB,CAwC5B;SAxCY,gBAAgB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { state, customElement, property } from 'lit/decorators.js';\nimport { InstalledCell, AppWebsocket, Record, ActionHash, InstalledAppInfo } from '@holochain/client';\nimport { contextProvided } from '@lit-labs/context';\nimport { decode } from '@msgpack/msgpack';\nimport { appInfoContext, appWebsocketContext } from '../../contexts';\nimport { Commitment } from './commitment';\nimport '@material/mwc-circular-progress';\n\n@customElement('commitment-detail')\nexport class CommitmentDetail extends LitElement {\n  @property()\n  actionHash!: ActionHash;\n\n  @state()\n  _commitment: Commitment | undefined;\n\n  @contextProvided({ context: appWebsocketContext })\n  appWebsocket!: AppWebsocket;\n  @contextProvided({ context: appInfoContext })\n  appInfo!: InstalledAppInfo;\n\n  async firstUpdated() {\n    const cellData = this.appInfo.cell_data.find((c: InstalledCell) => c.role_id === 'assemble')!;\n    const record: Record | undefined = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'assemble',\n      fn_name: 'get_commitment',\n      payload: this.actionHash,\n      provenance: cellData.cell_id[1]\n    });\n    if (record) {\n      this._commitment = decode((record.entry as any).Present.entry) as Commitment;\n    }\n  }\n\n  render() {\n    if (!this._commitment) {\n      return html`<div style=\"display: flex; flex: 1; align-items: center; justify-content: center\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n    }\n    return html`\n      <div style=\"display: flex; flex-direction: column\">\n        <span style=\"font-size: 18px\">Commitment</span>\n\t\t  <!-- TODO: implement the rendering of offer_hash -->\n      </div>\n    `;\n  }\n}\n"]}