{"version":3,"file":"promise-for-offer.js","sourceRoot":"","sources":["../../../src/assemble/assemble/promise-for-offer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAEnE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AACrE,OAAO,kBAAkB,CAAC;AAGnB,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,UAAU;IAc7C,KAAK,CAAC,YAAY;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,UAAU,CAAE,CAAC;QAE9F,MAAM,OAAO,GAAkB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC9D,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,uBAAuB;YAChC,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,IAAI,CAAA;;aAEJ,CAAC;SACT;QACD,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CACtB,IAAI,CAAA,+BAA+B,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,oBAAoB,CACnF;;KAEJ,CAAC;IACJ,CAAC;CACF,CAAA;AAtCC;IADC,QAAQ,EAAE;mDACa;AAGxB;IADC,KAAK,EAAE;iDAC4B;AAGpC;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;qDACtB;AAG5B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;gDAClB;AAZhB,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CAyC3B;SAzCY,eAAe","sourcesContent":["import { LitElement, html } from 'lit';\nimport { state, customElement, property } from 'lit/decorators.js';\nimport { InstalledCell, Record, AppWebsocket, ActionHash, InstalledAppInfo } from '@holochain/client';\nimport { contextProvided } from '@lit-labs/context';\nimport { appWebsocketContext, appInfoContext } from '../../contexts';\nimport './promise-detail';\n\n@customElement('promise-for-offer')\nexport class PromiseForOffer extends LitElement {\n\n  @property()\n  actionHash!: ActionHash;\n\n  @state()\n  _records: Array<Record> | undefined;\n\n  @contextProvided({ context: appWebsocketContext })\n  appWebsocket!: AppWebsocket;\n\n  @contextProvided({ context: appInfoContext })\n  appInfo!: InstalledAppInfo;\n\n  async firstUpdated() {\n    const cellData = this.appInfo.cell_data.find((c: InstalledCell) => c.role_id === 'assemble')!;\n\n    const records: Array<Record> = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'assemble',\n      fn_name: 'get_promise_for_offer',\n      payload: this.actionHash,\n      provenance: cellData.cell_id[1]\n    });\n  }\n\n  render() {\n    if (!this._records) {\n      return html`<div style=\"display: flex; flex: 1; align-items: center; justify-content: center\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n    }\n    return html`\n      <div style=\"display: flex; flex-direction: column\">\n        ${this._records.map(r => \n          html`<promise-detail .actionHash=${r.signed_action.hashed.hash}></promise-detail>`\n        )}\n      </div>\n    `;\n  }\n}\n"]}