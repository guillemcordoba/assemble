{"version":3,"file":"promise-detail.js","sourceRoot":"","sources":["../../../src/assemble/assemble/promise-detail.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAEnE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AAErE,OAAO,iCAAiC,CAAC;AAKlC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAe3C,KAAK,CAAC,YAAY;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,UAAU,CAAE,CAAC;QAC9F,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClE,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,aAAa;YACtB,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAErD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAE,MAAM,CAAC,KAAa,CAAC,OAAO,CAAC,KAAK,CAAY,CAAC;QAEvE,MAAM,KAAK,GAAuB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YACjE,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,WAAW;YACpB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;YACjC,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,GAAG,MAAM,CAAE,KAAK,CAAC,KAAa,CAAC,OAAO,CAAC,KAAK,CAAU,CAAC;SACnE;IACH,CAAC;IAED,UAAU,CAAC,CAAO;QAChB,OAAO,IAAI,CAAA;;;wBAGS,CAAC,CAAC,KAAK;gBACf,CAAC,CAAC,WAAW;;;OAGtB,CAAC;IACN,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,IAAI,CAAA;;aAEJ,CAAC;SACT;QACD,OAAO,IAAI,CAAA;;;;;4CAK8B,IAAI,CAAC,MAAM,CAAC,KAAM;;;;4CAInB,IAAI,CAAC,MAAM,CAAC,WAAY;;;;QAI5D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;KAGnD,CAAC;IACJ,CAAC;CACF,CAAA;AA3EC;IADC,QAAQ,EAAE;iDACa;AAGxB;IADC,KAAK,EAAE;+CACsB;AAG9B;IADC,KAAK,EAAE;6CACkB;AAG1B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;mDACtB;AAE5B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;8CAClB;AAbhB,aAAa;IADzB,aAAa,CAAC,gBAAgB,CAAC;GACnB,aAAa,CA6EzB;SA7EY,aAAa","sourcesContent":["import { LitElement, html } from 'lit';\nimport { state, customElement, property } from 'lit/decorators.js';\nimport { InstalledCell, AppWebsocket, Record, ActionHash, InstalledAppInfo } from '@holochain/client';\nimport { contextProvided } from '@lit-labs/context';\nimport { decode } from '@msgpack/msgpack';\nimport { appInfoContext, appWebsocketContext } from '../../contexts';\nimport { Promise } from './promise';\nimport '@material/mwc-circular-progress';\nimport { Offer } from './offer';\nimport { Slot } from './offer';\n\n@customElement('promise-detail')\nexport class PromiseDetail extends LitElement {\n  @property()\n  actionHash!: ActionHash;\n\n  @state()\n  _promise: Promise | undefined;\n\n  @state()\n  _offer: Offer | undefined;\n\n  @contextProvided({ context: appWebsocketContext })\n  appWebsocket!: AppWebsocket;\n  @contextProvided({ context: appInfoContext })\n  appInfo!: InstalledAppInfo;\n\n  async firstUpdated() {\n    const cellData = this.appInfo.cell_data.find((c: InstalledCell) => c.role_id === 'assemble')!;\n    const record: Record | undefined = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'assemble',\n      fn_name: 'get_promise',\n      payload: this.actionHash,\n      provenance: cellData.cell_id[1]\n    });\n    if (!record) throw new Error(\"Couldn't get promise\"); \n\n    this._promise = decode((record.entry as any).Present.entry) as Promise;\n\n    const offer: Record | undefined = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'assemble',\n      fn_name: 'get_offer',\n      payload: this._promise.offer_hash,\n      provenance: cellData.cell_id[1]\n    });\n    if (offer) {\n      this._offer = decode((offer.entry as any).Present.entry) as Offer;\n    }\n  }\n  \n  renderSlot(s: Slot) {    \n    return html`\n      <div style=\"display: flex; flex-direction: row\">\n      <div style=\"display: flex; flex-direction:column\">\n        <span><strong>${s.title}</strong></span>\n        <span>${s.description}</span>\n      </div>\n      </div>\n      `;\n  }\n\n  render() {\n    if (!this._offer) {\n      return html`<div style=\"display: flex; flex: 1; align-items: center; justify-content: center\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n    }\n    return html`\n      <div style=\"display: flex; flex-direction: column; text-align: left\">\n        <span style=\"font-size: 18px\">Offer</span>\n\t\t  <div style=\"display: flex; flex-direction: column\">\n\t\t    <span><strong>Title</strong></span>\n\t\t    <span style=\"white-space: pre-line\">${ this._offer.title }</span>\n\t\t  </div>\n\t\t  <div style=\"display: flex; flex-direction: column\">\n\t\t    <span><strong>Description</strong></span>\n\t\t    <span style=\"white-space: pre-line\">${this._offer.description }</span>\n\t\t  </div>\n      <span style=\"margin-top: 16px\">Slots</span>\n      \n      ${this._offer.slots.map((r) => this.renderSlot(r))}\n      \n      </div>\n    `;\n  }\n}\n"]}